// Code generated by protoc-gen-go. DO NOT EDIT.
// source: storage.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SaveResourceRequest struct {
	Value                string   `protobuf:"bytes,6,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SaveResourceRequest) Reset()         { *m = SaveResourceRequest{} }
func (m *SaveResourceRequest) String() string { return proto.CompactTextString(m) }
func (*SaveResourceRequest) ProtoMessage()    {}
func (*SaveResourceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d2c4ccf1453ffdb, []int{0}
}

func (m *SaveResourceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SaveResourceRequest.Unmarshal(m, b)
}
func (m *SaveResourceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SaveResourceRequest.Marshal(b, m, deterministic)
}
func (m *SaveResourceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SaveResourceRequest.Merge(m, src)
}
func (m *SaveResourceRequest) XXX_Size() int {
	return xxx_messageInfo_SaveResourceRequest.Size(m)
}
func (m *SaveResourceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SaveResourceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SaveResourceRequest proto.InternalMessageInfo

func (m *SaveResourceRequest) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type ListResourceRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListResourceRequest) Reset()         { *m = ListResourceRequest{} }
func (m *ListResourceRequest) String() string { return proto.CompactTextString(m) }
func (*ListResourceRequest) ProtoMessage()    {}
func (*ListResourceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d2c4ccf1453ffdb, []int{1}
}

func (m *ListResourceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListResourceRequest.Unmarshal(m, b)
}
func (m *ListResourceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListResourceRequest.Marshal(b, m, deterministic)
}
func (m *ListResourceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListResourceRequest.Merge(m, src)
}
func (m *ListResourceRequest) XXX_Size() int {
	return xxx_messageInfo_ListResourceRequest.Size(m)
}
func (m *ListResourceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListResourceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListResourceRequest proto.InternalMessageInfo

type GetResourceRequest struct {
	ResourceId           string   `protobuf:"bytes,1,opt,name=resourceId,proto3" json:"resourceId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetResourceRequest) Reset()         { *m = GetResourceRequest{} }
func (m *GetResourceRequest) String() string { return proto.CompactTextString(m) }
func (*GetResourceRequest) ProtoMessage()    {}
func (*GetResourceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d2c4ccf1453ffdb, []int{2}
}

func (m *GetResourceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetResourceRequest.Unmarshal(m, b)
}
func (m *GetResourceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetResourceRequest.Marshal(b, m, deterministic)
}
func (m *GetResourceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetResourceRequest.Merge(m, src)
}
func (m *GetResourceRequest) XXX_Size() int {
	return xxx_messageInfo_GetResourceRequest.Size(m)
}
func (m *GetResourceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetResourceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetResourceRequest proto.InternalMessageInfo

func (m *GetResourceRequest) GetResourceId() string {
	if m != nil {
		return m.ResourceId
	}
	return ""
}

type DeleteResourceRequest struct {
	ResourceId           string   `protobuf:"bytes,1,opt,name=resourceId,proto3" json:"resourceId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteResourceRequest) Reset()         { *m = DeleteResourceRequest{} }
func (m *DeleteResourceRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteResourceRequest) ProtoMessage()    {}
func (*DeleteResourceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d2c4ccf1453ffdb, []int{3}
}

func (m *DeleteResourceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteResourceRequest.Unmarshal(m, b)
}
func (m *DeleteResourceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteResourceRequest.Marshal(b, m, deterministic)
}
func (m *DeleteResourceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteResourceRequest.Merge(m, src)
}
func (m *DeleteResourceRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteResourceRequest.Size(m)
}
func (m *DeleteResourceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteResourceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteResourceRequest proto.InternalMessageInfo

func (m *DeleteResourceRequest) GetResourceId() string {
	if m != nil {
		return m.ResourceId
	}
	return ""
}

type Resource struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Value                string   `protobuf:"bytes,6,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Resource) Reset()         { *m = Resource{} }
func (m *Resource) String() string { return proto.CompactTextString(m) }
func (*Resource) ProtoMessage()    {}
func (*Resource) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d2c4ccf1453ffdb, []int{4}
}

func (m *Resource) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Resource.Unmarshal(m, b)
}
func (m *Resource) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Resource.Marshal(b, m, deterministic)
}
func (m *Resource) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Resource.Merge(m, src)
}
func (m *Resource) XXX_Size() int {
	return xxx_messageInfo_Resource.Size(m)
}
func (m *Resource) XXX_DiscardUnknown() {
	xxx_messageInfo_Resource.DiscardUnknown(m)
}

var xxx_messageInfo_Resource proto.InternalMessageInfo

func (m *Resource) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Resource) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func init() {
	proto.RegisterType((*SaveResourceRequest)(nil), "pb.SaveResourceRequest")
	proto.RegisterType((*ListResourceRequest)(nil), "pb.ListResourceRequest")
	proto.RegisterType((*GetResourceRequest)(nil), "pb.GetResourceRequest")
	proto.RegisterType((*DeleteResourceRequest)(nil), "pb.DeleteResourceRequest")
	proto.RegisterType((*Resource)(nil), "pb.Resource")
}

func init() { proto.RegisterFile("storage.proto", fileDescriptor_0d2c4ccf1453ffdb) }

var fileDescriptor_0d2c4ccf1453ffdb = []byte{
	// 320 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x92, 0xcf, 0x4a, 0xf3, 0x40,
	0x14, 0xc5, 0x69, 0xbe, 0x7e, 0xc5, 0x5e, 0xff, 0xe1, 0xad, 0xad, 0x35, 0x4a, 0x91, 0x59, 0x89,
	0xc2, 0xa4, 0xa8, 0xe0, 0x56, 0x44, 0x29, 0xa2, 0xab, 0x76, 0xe9, 0x6a, 0xd2, 0x5e, 0xcb, 0x40,
	0xcd, 0xc4, 0x64, 0x12, 0x10, 0x71, 0xe3, 0x2b, 0xf8, 0x44, 0x3e, 0x83, 0xaf, 0xe0, 0x83, 0xc8,
	0x64, 0x3a, 0x56, 0x62, 0x5c, 0xb8, 0x9c, 0x73, 0xcf, 0xf9, 0x71, 0xe7, 0x70, 0x61, 0x35, 0xd5,
	0x2a, 0x11, 0x53, 0xe2, 0x71, 0xa2, 0xb4, 0x42, 0x2f, 0x0e, 0xfd, 0x9d, 0xa9, 0x52, 0xd3, 0x19,
	0x05, 0x85, 0x12, 0x66, 0x77, 0x01, 0xdd, 0xc7, 0xfa, 0xd1, 0x1a, 0xfc, 0xdd, 0xf9, 0x50, 0xc4,
	0x32, 0x10, 0x51, 0xa4, 0xb4, 0xd0, 0x52, 0x45, 0xa9, 0x9d, 0xb2, 0x43, 0x68, 0x8d, 0x44, 0x4e,
	0x43, 0x4a, 0x55, 0x96, 0x8c, 0x69, 0x48, 0x0f, 0x19, 0xa5, 0x1a, 0x37, 0xe1, 0x7f, 0x2e, 0x66,
	0x19, 0x75, 0x1b, 0x7b, 0xb5, 0xfd, 0xe6, 0xd0, 0x3e, 0x58, 0x1b, 0x5a, 0x37, 0x32, 0xd5, 0x25,
	0x33, 0x3b, 0x01, 0x1c, 0x50, 0x59, 0xc5, 0x1e, 0x40, 0x32, 0x97, 0xae, 0x26, 0xdd, 0x5a, 0xc1,
	0xf9, 0xa6, 0xb0, 0x53, 0x68, 0x5f, 0xd0, 0x8c, 0x34, 0xfd, 0x35, 0xd8, 0x87, 0x25, 0x17, 0xc1,
	0x35, 0xf0, 0xa4, 0xf3, 0x78, 0x72, 0x52, 0xbd, 0xf7, 0xd1, 0x9b, 0x07, 0xeb, 0x2e, 0x32, 0xa2,
	0x24, 0x97, 0x63, 0xc2, 0x33, 0xa8, 0x9b, 0x8f, 0xe3, 0x16, 0x8f, 0x43, 0x5e, 0x51, 0x81, 0xbf,
	0x62, 0x06, 0x4e, 0x64, 0x1b, 0x2f, 0xef, 0x1f, 0xaf, 0xde, 0x32, 0x6b, 0x06, 0x6e, 0x13, 0x3c,
	0x87, 0xba, 0x69, 0xc3, 0x12, 0x2a, 0x7a, 0xa9, 0x26, 0xe0, 0x82, 0xd0, 0xaf, 0xe1, 0x35, 0xfc,
	0x1b, 0x90, 0xc6, 0x8e, 0x71, 0xfe, 0xec, 0xb0, 0x44, 0xe8, 0x15, 0x84, 0x2e, 0x76, 0xbe, 0x08,
	0xc1, 0xd3, 0xa2, 0x97, 0x67, 0xbc, 0x85, 0x86, 0x6d, 0x14, 0xb7, 0x4d, 0xae, 0xb2, 0x5d, 0xbf,
	0xc3, 0xed, 0x3d, 0x70, 0x77, 0x2c, 0xfc, 0xd2, 0x1c, 0x8b, 0x83, 0x1f, 0xfc, 0x02, 0x0f, 0x1b,
	0x85, 0xff, 0xf8, 0x33, 0x00, 0x00, 0xff, 0xff, 0xa1, 0x95, 0xc6, 0xe9, 0x7f, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ResourceServiceClient is the client API for ResourceService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ResourceServiceClient interface {
	Save(ctx context.Context, in *SaveResourceRequest, opts ...grpc.CallOption) (*Resource, error)
	List(ctx context.Context, in *ListResourceRequest, opts ...grpc.CallOption) (ResourceService_ListClient, error)
	Get(ctx context.Context, in *GetResourceRequest, opts ...grpc.CallOption) (*Resource, error)
	Delete(ctx context.Context, in *DeleteResourceRequest, opts ...grpc.CallOption) (*empty.Empty, error)
}

type resourceServiceClient struct {
	cc *grpc.ClientConn
}

func NewResourceServiceClient(cc *grpc.ClientConn) ResourceServiceClient {
	return &resourceServiceClient{cc}
}

func (c *resourceServiceClient) Save(ctx context.Context, in *SaveResourceRequest, opts ...grpc.CallOption) (*Resource, error) {
	out := new(Resource)
	err := c.cc.Invoke(ctx, "/pb.ResourceService/Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resourceServiceClient) List(ctx context.Context, in *ListResourceRequest, opts ...grpc.CallOption) (ResourceService_ListClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ResourceService_serviceDesc.Streams[0], "/pb.ResourceService/List", opts...)
	if err != nil {
		return nil, err
	}
	x := &resourceServiceListClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ResourceService_ListClient interface {
	Recv() (*Resource, error)
	grpc.ClientStream
}

type resourceServiceListClient struct {
	grpc.ClientStream
}

func (x *resourceServiceListClient) Recv() (*Resource, error) {
	m := new(Resource)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *resourceServiceClient) Get(ctx context.Context, in *GetResourceRequest, opts ...grpc.CallOption) (*Resource, error) {
	out := new(Resource)
	err := c.cc.Invoke(ctx, "/pb.ResourceService/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resourceServiceClient) Delete(ctx context.Context, in *DeleteResourceRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/pb.ResourceService/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ResourceServiceServer is the server API for ResourceService service.
type ResourceServiceServer interface {
	Save(context.Context, *SaveResourceRequest) (*Resource, error)
	List(*ListResourceRequest, ResourceService_ListServer) error
	Get(context.Context, *GetResourceRequest) (*Resource, error)
	Delete(context.Context, *DeleteResourceRequest) (*empty.Empty, error)
}

// UnimplementedResourceServiceServer can be embedded to have forward compatible implementations.
type UnimplementedResourceServiceServer struct {
}

func (*UnimplementedResourceServiceServer) Save(ctx context.Context, req *SaveResourceRequest) (*Resource, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Save not implemented")
}
func (*UnimplementedResourceServiceServer) List(req *ListResourceRequest, srv ResourceService_ListServer) error {
	return status.Errorf(codes.Unimplemented, "method List not implemented")
}
func (*UnimplementedResourceServiceServer) Get(ctx context.Context, req *GetResourceRequest) (*Resource, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedResourceServiceServer) Delete(ctx context.Context, req *DeleteResourceRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}

func RegisterResourceServiceServer(s *grpc.Server, srv ResourceServiceServer) {
	s.RegisterService(&_ResourceService_serviceDesc, srv)
}

func _ResourceService_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SaveResourceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceServiceServer).Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.ResourceService/Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceServiceServer).Save(ctx, req.(*SaveResourceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResourceService_List_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ListResourceRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ResourceServiceServer).List(m, &resourceServiceListServer{stream})
}

type ResourceService_ListServer interface {
	Send(*Resource) error
	grpc.ServerStream
}

type resourceServiceListServer struct {
	grpc.ServerStream
}

func (x *resourceServiceListServer) Send(m *Resource) error {
	return x.ServerStream.SendMsg(m)
}

func _ResourceService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetResourceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.ResourceService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceServiceServer).Get(ctx, req.(*GetResourceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResourceService_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteResourceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceServiceServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.ResourceService/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceServiceServer).Delete(ctx, req.(*DeleteResourceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ResourceService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.ResourceService",
	HandlerType: (*ResourceServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Save",
			Handler:    _ResourceService_Save_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _ResourceService_Get_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _ResourceService_Delete_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "List",
			Handler:       _ResourceService_List_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "storage.proto",
}
